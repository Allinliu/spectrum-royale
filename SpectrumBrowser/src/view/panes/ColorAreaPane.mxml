<view:DemoPane xmlns:fx="http://ns.adobe.com/mxml/2009"
  xmlns:view="view.*" xmlns:sp="library://ns.unhurdle.com/spectrum"
  xmlns="library://ns.apache.org/royale/html" xmlns:comp="view.components.*"
  initComplete="initCompleteHandler(event)"
  title="Color Area">
  <fx:Script>
    <![CDATA[
    ]]>
  </fx:Script>
  <fx:Style>
		@namespace js "library://ns.apache.org/royale/basic";
		@namespace comp "view.components.*";
		js|HueSelector {
      IBeadLayout: ClassReference("view.components.MyVerticalSliderLayout");
      IBeadView: ClassReference("view.components.MySliderView");
      IBeadController: ClassReference("view.components.MyVSliderMouseController");
      border-radius: 4px;
    }

    js|ColorSpectrum {
      IBeadView:  ClassReference("view.components.MyColorSpectrumView");
    }

		comp|MyAlphaSelector {
      IBeadLayout: ClassReference("view.components.MyVerticalSliderLayout");
      IBeadModel: ClassReference("view.components.MyAlphaSelectorModel");
      IBeadView: ClassReference("view.components.MyAlphaSelectorView");
      IBeadController: ClassReference("view.components.MyVSliderMouseController");
      border-radius: 4px;
    }

    comp|ColorArea {
      IPopUp: ClassReference("view.components.MyColorPickerPopUpWithPalette");
      IBeadView: ClassReference("view.components.MyColorPickerView");
      IBeadModel: ClassReference("view.components.ArrayColorSelectionWithAlphaModel");
    }

    comp|MyAlphaTextField {
      IBeadModel: ClassReference("org.apache.royale.html.beads.models.RangeModel");
      IBeadController: ClassReference("view.components.AlphaTextFieldController");
    }

    comp|MyColorTextField {
      IBeadModel: ClassReference("org.apache.royale.html.beads.models.ColorModel");
      IBeadController: ClassReference("view.components.ColorTextFieldController");
    }

    .ColorSpectrum {
      border-radius: 4px;
    }

  </fx:Style>
  <fx:Script>
    <![CDATA[
      import org.apache.royale.events.Event;
      import view.components.ArrayColorSelectionWithAlphaModel;

      private function initCompleteHandler(e:Event):void
      {
        var dp:Array = [];
				for (var i:int = 0; i < 30; i++)
				{
					var color:uint = uint(Math.random() * 0xFFFFFF);
					dp.push(color);
				}
        (myColorArea.model as ArrayColorSelectionWithAlphaModel).dataProvider = dp;
      }
    ]]>
  </fx:Script>
  <comp:ColorArea id="myColorArea"/>
  <comp:Markup>
    <comp:StyledCode text='&lt;sp:CoachMark&gt;'/>
    <Br/>
    <comp:StyledCode text='&lt;sp:CoachMark flavor="dark"&gt;'/>
    <Br/>
    <comp:StyledCode text='&lt;sp:CoachMark flavor="light"&gt;'/>
  </comp:Markup>

</view:DemoPane>