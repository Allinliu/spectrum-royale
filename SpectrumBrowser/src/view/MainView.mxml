<sp:View xmlns:fx="http://ns.adobe.com/mxml/2009"
  xmlns:sp="library://ns.unhurdle.com/spectrum" xmlns:panes="view.panes.*"
  xmlns:js="library://ns.apache.org/royale/basic" initComplete="setNavSelection()">
  <fx:Script>
    <![CDATA[
        import models.NavProvider;

        import org.apache.royale.routing.RouteState;

        import view.DemoPane;
        import view.panes.AccordionPane;
        import view.panes.ActionBarPane;
        import view.panes.ActionButtonPane;
        import view.panes.ActionMenuPane;
        import view.panes.AlertPane;
        import view.panes.AssetListPane;
        import view.panes.AssetPane;
        import view.panes.AvatarPane;
        import view.panes.BannerPane;
        import view.panes.BarLoaderPane;
        import view.panes.ButtonGroupPane;
        import view.panes.ButtonPane;
        import view.panes.CalendarPane;
        import view.panes.CardGalleryPane;
        import view.panes.CardPane;
        import view.panes.CardPreviewPane;
        import view.panes.CheckboxPane;
        import view.panes.CircleLoaderPane;
        import view.panes.ClearButtonPane;
        import view.panes.CoachMarkPane;
        import view.panes.ComboboxPane;
        import view.panes.ComingSoonPane;
        import view.panes.CycleButtonPane;
        import view.panes.DatePickerPane;
        import view.panes.DialPane;
        import view.panes.DialogPane;
        import view.panes.DropIndicatorPane;
        import view.panes.FieldGroupPane;
        import view.panes.FieldLabelPane;
        import view.panes.FormPane;
        import view.panes.LabelPane;
        import view.panes.LinkPane;
        import view.panes.RadioPane;
        import view.panes.StatusLightPane;
        import view.panes.SwitchPane;
        import view.panes.TextFieldDecoratedPane;
        import view.panes.ToolPane;
        import view.panes.TooltipPane;
        import view.panes.TreeViewPane;
        import view.panes.TypographyInternationalizedPane;
        import view.panes.TypographyPane;
        import view.panes.WellPane;
        import view.panes.ToastPane;

      [Bindable]public var navProvider:Array = [
        new NavProvider("Accordion",AccordionPane,"accordion"),
        new NavProvider("Action Bar",ActionBarPane,"action_bar"),
        new NavProvider("Action Button",ActionButtonPane,"action_button"),
        new NavProvider("Action Menu",ActionMenuPane,"action_menu"),
        new NavProvider("Alert",AlertPane,"alert"),
        new NavProvider("Asset",AssetPane,"asset"),
        new NavProvider("AssetList",AssetListPane,"asset_list"),
        new NavProvider("Avatar",AvatarPane,"avatar"),
        new NavProvider("Banner",BannerPane,"banner"),
        new NavProvider("Bar Loader",BarLoaderPane,"bar_loader"),
        new NavProvider("Breadcrumbs",ComingSoonPane,"breadcrumbs"),
        new NavProvider("Button",ButtonPane,"button"),
        new NavProvider("Button Group",ButtonGroupPane,"button_group"),
        new NavProvider("Calendar",CalendarPane,"calendar"),
        new NavProvider("Card",CardPane,"card"),
        new NavProvider("Card - Asset preview",CardPreviewPane,"card_asset_preview"),
        new NavProvider("Card - Gallery",CardGalleryPane,"card_gallery"),
        new NavProvider("Checkbox",CheckboxPane,"checkbox"),
        new NavProvider("Circle Loader",CircleLoaderPane,"circle_loader"),
        new NavProvider("Clear Button",ClearButtonPane,"clear_button"),
        new NavProvider("Coach Mark",CoachMarkPane,"coach_mark"),
        new NavProvider("Combobox",ComboboxPane,"combobox"),
        new NavProvider("Cycle Button",CycleButtonPane,"cycle_button"),
        new NavProvider("Date Picker",DatePickerPane,"date_picker"),
        new NavProvider("Dial",DialPane,"dial"),
        new NavProvider("Dialog",DialogPane,"dialog"),
        new NavProvider("Dropdown",ComingSoonPane,"dropdown"),
        new NavProvider("Drop Indicator",DropIndicatorPane,"drop_indicator"),
        new NavProvider("Dropzone",ComingSoonPane,"dropzone"),
        new NavProvider("Field Group",FieldGroupPane,"field_group"),
        new NavProvider("Field Label",FieldLabelPane,"field_label"),
        new NavProvider("Form",FormPane,"form"),
        new NavProvider("Illustrated Message",ComingSoonPane,"illustrated_message"),
        new NavProvider("Label",LabelPane,"label"),
        new NavProvider("Link",LinkPane,"link"),
        new NavProvider("Logic Button",ComingSoonPane,"logic_button"),
        new NavProvider("Menu",ComingSoonPane,"menu"),
        new NavProvider("Meter",ComingSoonPane,"meter"),
        new NavProvider("Miller Columns",ComingSoonPane,"miller_columns"),
        new NavProvider("Page",ComingSoonPane,"page"),
        new NavProvider("Pagination - Button Style",ComingSoonPane,"pagination_button_style"),
        new NavProvider("Pagination - Explicit",ComingSoonPane,"pagination_explicit"),
        new NavProvider("Pagination - Page",ComingSoonPane,"pagination_page"),
        new NavProvider("Popover",ComingSoonPane,"popover"),
        new NavProvider("Quick Actions",ComingSoonPane,"quick_actions"),
        new NavProvider("Radio",RadioPane,"radio"),
        new NavProvider("Rating",ComingSoonPane,"rating"),
        new NavProvider("Rule",ComingSoonPane,"rule"),
        new NavProvider("Search",ComingSoonPane,"search"),
        new NavProvider("Search Within",ComingSoonPane,"search_within"),
        new NavProvider("Side Navigation",ComingSoonPane,"side_navigation"),
        new NavProvider("Slider",ComingSoonPane,"slider"),
        new NavProvider("Split Button",ComingSoonPane,"split_button"),
        new NavProvider("SplitView",ComingSoonPane,"split_view"),
        new NavProvider("Status Light",StatusLightPane,"status_light"),
        new NavProvider("Steplist",ComingSoonPane,"steplist"),
        new NavProvider("Stepper",ComingSoonPane,"stepper"),
        new NavProvider("Switch",SwitchPane,"switch"),
        new NavProvider("Table",ComingSoonPane,"table"),
        new NavProvider("Tabs",ComingSoonPane,"tabs"),
        new NavProvider("Tags",ComingSoonPane,"tags"),
        new NavProvider("Text area",ComingSoonPane,"text_area"),
        new NavProvider("Text Field",ComingSoonPane,"text_field"),
        new NavProvider("Text Field - Decorated",TextFieldDecoratedPane,"text_field_decorated"),
        new NavProvider("Toast",ToastPane,"toast"),
        new NavProvider("Tool",ToolPane,"tool"),
        new NavProvider("Tooltip",TooltipPane,"tooltip"),
        new NavProvider("Tree View",TreeViewPane,"tree_view"),
        new NavProvider("Typography (Internationalized)",TypographyInternationalizedPane,"typography_internationalized"),
        new NavProvider("Typography",TypographyPane,"typography"),
        new NavProvider("Well",WellPane,"well")
      ];
      private function setNavSelection():void{
        var routeState:RouteState = router.routeState;
        if(routeState.state){
          setNavFromHash(routeState.state);
        } else {
          sideNav.selectedIndex = 0;
          setNav()
        }
      }
      private function setNav():void{
        if(currentPane){
          mainGroup.removeElement(currentPane);
        }
        var provider:NavProvider = sideNav.selectedItem as NavProvider;
        currentPane = new provider.reference();
        mainGroup.addElement(currentPane);
      }
      private function onNavChange():void{
        setNav();
        var provider:NavProvider = sideNav.selectedItem as NavProvider;
        router.routeState.title = provider.text;
        router.routeState.state = provider.hashLink;
        router.setState();
      }
      private var currentPane:DemoPane;
      private function hashChanged():void{
        setNavSelection();
      }
      private function setNavFromHash(hash:String):void{
        for each(var nav:NavProvider in navProvider){
          if(nav.hashLink == hash){
            sideNav.selectedItem = nav;
            setNav();
            return;
          }
        }
      }
    ]]>
  </fx:Script>
  <fx:Style>
    .pane-container{
      padding:40px;
      flex-grow:1;
      max-height:100vh;
      overflow: auto;
    }
    .variant-container{
      padding-top:36px;
    }
    .variant-header{
      padding-bottom:12px;
    }
    .markup-section{
      margin:36px 24px;
    }
    .markup-header{
      padding-bottom:12px;
    }
    .variant-header-padding{
      height: 36px
    }
    .spectrum-FieldGroup--vertical > .spectrum-ButtonGroup + .spectrum-ButtonGroup{
      margin-top: 21px;
    }
  </fx:Style>
  <sp:beads>
    <js:Router id="router" stateChange="hashChanged()" />                
  </sp:beads>
  <sp:FlexContainer id="mainGroup" wrap="false">
    <sp:List id="sideNav" dataProvider="{navProvider}" change="onNavChange()" style="max-height:100vh;flex-shrink: 0; background-color:rgba(0.5,0.5,0.5,0.05)"/>
  </sp:FlexContainer>

</sp:View>